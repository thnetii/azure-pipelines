name: $(Date:yyyy-MM-dd)-rev$(Rev:r)
trigger:
  batch: true
  branches:
    include:
    - master
    - rel-tfx/*
  paths:
    include:
    - src/THNETII.AzureDevOps.Pipelines.GitHubTaskLibrary
jobs:
- job:          GitHubTaskLibrary_job
  displayName:  Create GitHubTaskLibrary
  pool:
    vmImage:    ubuntu-latest
  steps:
  - pwsh: |
      [string]$rootDir = Get-Location
      Write-Host "${rootDir}: finding tasks in relative subdirectories ..."
      Get-ChildItem -File -Filter task.json -Path . -Recurse | ForEach-Object {
        Push-Location $_.Directory.FullName
        $relPath = [System.IO.Path]::GetRelativePath($rootDir, $(Get-Location))
        Write-Host "`t${relPath}: npm install"
        & npm install
        Pop-Location
      }
      Write-Host "${rootDir}: npm install"
      & npm install
      Get-ChildItem -File -Filter task.json -Path . -Recurse | ForEach-Object {
        Push-Location $_.Directory.FullName
        $relPath = [System.IO.Path]::GetRelativePath($rootDir, $(Get-Location))
        Write-Host "`t${relPath}: npm run-script compile"
        & npm run-script compile
        Pop-Location
      }
      Write-Host "${rootDir}: tfx extension create --output-path "$(Build.ArtifactStagingDirectory)" --manifest-globs vss-extension.json"
      & npx tfx extension create --output-path "$(Build.ArtifactStagingDirectory)" --manifest-globs vss-extension.json
    displayName: tfx extension create src/THNETII.AzureDevOps.Pipelines.GitHubTaskLibrary
    workingDirectory: src/THNETII.AzureDevOps.Pipelines.GitHubTaskLibrary
  - task:     PublishBuildArtifacts@1
    displayName: Publish Publish build artifacts
    inputs:
      pathtoPublish:  $(Build.ArtifactStagingDirectory)
      artifactName:   $(System.TeamProject)-tfx-extensions
