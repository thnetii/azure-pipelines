parameters:
- name:     checkout
  type:     stepList
  default:  []
- name:     presteps
  type:     stepList
  default:  []
- name:     poststeps
  type:     stepList
  default:  []

- name:     packArtifactName
  type:     string
  default:  $(System.TeamProject)-nuget
- name:     publishArtifactName
  type:     string
  default:  $(System.TeamProject)-artifacts

- name:     restore
  type:     object
  default:  {}
  # skip:               true
  # displayNameSuffix:  ''
  # condition:          ''
  # projects:           ''
  # arguments:          ''
- name:     build
  type:     object
  default:  {}
  # skip:               true
  # displayNameSuffix:  ''
  # condition:          ''
  # projects:           ''
  # arguments:          ''
- name:     test
  type:     object
  default:  {}
  # skip:               true
  # displayNameSuffix:  ''
  # condition:          ''
  # projects:           ''
  # arguments:          ''
- name:     pack
  type:     object
  default:  {}
  # skip:               true
  # displayNameSuffix:  ''
  # condition:          ''
  # projects:           ''
  # arguments:          ''
- name:     publish
  type:     object
  default:  {}
  # skip:               true
  # displayNameSuffix:  ''
  # condition:          ''
  # projects:           ''
  # arguments:          ''

steps:
- ${{ each step in parameters.checkout }}:
  - ${{ step }}
- ${{ each step in parameters.presteps }}:
  - ${{ step }}
- ${{ if not(parameters.restore.skip) }}:
  - task: MSBuild@1
    displayName:  msbuild -t:Restore ${{ parameters.restore.displayNameSuffix }}
    ${{ if ne('', parameters.restore.condition) }}:
      condition:    and(ne(variables['SkipBuildTasks'], 'true'), ${{ parameters.restore.condition }})
    ${{ if eq('', parameters.restore.condition) }}:
      condition:    ne(variables['SkipBuildTasks'], 'true')
    inputs:
      solution:   ${{ parameters.restore.projects }}
      msbuildArguments:   -t:Restore ${{ parameters.restore.arguments }}
      ${{ each pair in parameters.restore }}:
        ${{ if notIn(pair.key, 'projects', 'solution', 'arguments', 'msbuildArguments', 'displayNameSuffix', 'condition', 'skip') }}:
          ${{ pair.key }}: ${{ pair.value }}
- ${{ if not(parameters.build.skip) }}:
  - task: MSBuild@1
    displayName:  msbuild -t:Build ${{ parameters.build.displayNameSuffix }}
    ${{ if ne('', parameters.build.condition) }}:
      condition:    and(ne(variables['SkipBuildTasks'], 'true'), ${{ parameters.build.condition }})
    ${{ if eq('', parameters.build.condition) }}:
      condition:    ne(variables['SkipBuildTasks'], 'true')
    inputs:
      solution:   ${{ parameters.build.projects }}
      msbuildArguments:   -t:Build ${{ parameters.build.arguments }}
      ${{ each pair in parameters.build }}:
        ${{ if notIn(pair.key, 'projects', 'solution', 'arguments', 'msbuildArguments', 'displayNameSuffix', 'condition', 'skip') }}:
          ${{ pair.key }}: ${{ pair.value }}
#- ${{ if not(parameters.test.skip) }}:
- ${{ if not(parameters.pack.skip) }}:
  - task: MSBuild@1
    displayName:  msbuild -t:Pack ${{ parameters.pack.displayNameSuffix }}
    ${{ if ne('', parameters.pack.condition) }}:
      condition:  ${{ parameters.pack.condition }}
    inputs:
      solution:   ${{ parameters.pack.projects }}
      msbuildArguments:   -t:Pack "-p:PackageOutputPath=$(Build.ArtifactStagingDirectory)/${{ parameters.packArtifactName }}" ${{ parameters.pack.arguments }}
      ${{ each pair in parameters.pack }}:
        ${{ if notIn(pair.key, 'projects', 'solution', 'arguments', 'msbuildArguments', 'displayNameSuffix', 'condition', 'skip') }}:
          ${{ pair.key }}: ${{ pair.value }}
  - task: PublishBuildArtifacts@1
    ${{ if ne('', parameters.pack.condition) }}:
      condition:      ${{ parameters.pack.condition }}
    displayName:      Upload Package artifacts
    inputs:
      pathtoPublish:  '$(Build.ArtifactStagingDirectory)/${{ parameters.packArtifactName }}'
      artifactName:   ${{ coalesce(parameters.packArtifactName, '$(System.TeamProject)-nuget') }}
    continueOnError:  true
- ${{ if not(parameters.publish.skip) }}:
  - task: MSBuild@1
    displayName:  msbuild -t:Publish ${{ parameters.publish.displayNameSuffix }}
    ${{ if ne('', parameters.publish.condition) }}:
      condition:  ${{ parameters.publish.condition }}
    inputs:
      solution:   ${{ parameters.publish.projects }}
      msbuildArguments:   -t:Publish "-p:PublishDir=$(Build.ArtifactStagingDirectory)/${{ parameters.publishArtifactName }}" ${{ parameters.publish.arguments }}
      ${{ each pair in parameters.publish }}:
        ${{ if notIn(pair.key, 'projects', 'solution', 'arguments', 'msbuildArguments', 'displayNameSuffix', 'condition', 'skip') }}:
          ${{ pair.key }}: ${{ pair.value }}
  - task: PublishBuildArtifacts@1
    ${{ if ne('', parameters.publish.condition) }}:
      condition:      ${{ parameters.publish.condition }}
    displayName:      Upload Binary artifacts
    inputs:
      pathtoPublish:  '$(Build.ArtifactStagingDirectory)/${{ parameters.publishArtifactName }}'
      artifactName:   ${{ coalesce(parameters.publishArtifactName, '$(System.TeamProject)-artifacts') }}
    continueOnError:  true
- ${{ each step in parameters.poststeps }}:
  - ${{ step }}
