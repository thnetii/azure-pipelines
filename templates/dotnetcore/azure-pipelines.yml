parameters:
  # defaultPool:                null
  defaultArguments:             -p:BuildId=$(Build.BuildId) -p:BuildSourceBranch=$(Build.SourceBranch) -logger:THNETII.AzureDevOps.Pipelines.MSBuild.AzureDevOpsLogger,"$(Build.SourcesDirectory)/bld/THNETII.AzureDevOps.Pipelines.MSBuild/lib/netcoreapp2.1/THNETII.AzureDevOps.Pipelines.MSBuild.dll"

  # common:                     null
  #overrideCommon:              {}

  # configurations:             null
  disableConfigurationDebug:    false
  disableConfigurationRelease:  false
  #addConfigurations:           []

  # runtimes:                   null
  disableNoRuntime:             false
  disableWindowsRuntime:        false
  disableLinuxRuntime:          false
  disableMacOSRuntime:          false
  #addRuntimes:                 []

jobs:
- template: jobs/each-configuration.yml
  parameters:
    ${{ if not(containsValue(parameters, 'defaultPool')) }}:
      defaultPool:
        vmImage: windows-2019
    ${{ if not(containsValue(parameters, 'common')) }}:
      common:
        # allProjects
        ${{ if not(parameters.overrideCommon.allProjects) }}:
          allProjects:  '*.sln'
        # srcProjects
        ${{ if not(parameters.overrideCommon.srcProjects) }}:
          srcProjects:  '[Ss]rc/*/*.csproj'
        # testProjects
        ${{ if not(parameters.overrideCommon.testProjects) }}:
          testProjects: '[Tt]est/*/*.csproj'
        # arguments:
        ${{ if not(parameters.overrideCommon.arguments) }}:
          ${{ if parameters.overrideCommon.addArguments }}:
            arguments:    ${{ parameters.defaultArguments }} ${{ parameters.overrideCommon.addArguments }}
          ${{ if not(parameters.overrideCommon.addArguments) }}:
            arguments:    ${{ parameters.defaultArguments }}
        ${{ if parameters.overrideCommon.arguments }}:
          ${{ if parameters.overrideCommon.addArguments }}:
            arguments:    ${{ parameters.overrideCommon.arguments }} ${{ parameters.overrideCommon.addArguments }}
          ${{ if not(parameters.overrideCommon.addArguments) }}:
            arguments:    ${{ parameters.overrideCommon.arguments }}
        ${{ each pair in parameters.overrideCommon }}:
          ${{ if notIn(pair.key, 'arguments', 'addArguments') }}:
            ${{ pair.key }}: ${{ pair.value }}
    ${{ if not(containsValue(parameters, 'publish')) }}:
      publish:
        arguments:            -p:BuildDefaultTargetFramework=true
        publishWebProjects:   false
        zipAfterPublish:      false
    ${{ if not(containsValue(parameters, 'configurations')) }}:
      configurations:
      - ${{ if ne(parameters.disableConfigurationDebug, 'true') }}:
        - id:             debug
          condition:      ne(variables['SkipConfigurationDebug'], 'true')
          displayName:    Debug
          argValue:       Debug
      - ${{ if ne(parameters.disableConfigurationRelease, 'true') }}:
        - id:             release
          condition:      ne(variables['SkipConfigurationRelease'], 'true')
          displayName:    Release
          argValue:       Release
      - ${{ each c in parameters.addConfigurations }}:
        - ${{ each pair in c }}:
            ${{ pair.key }}: ${{ pair.value }}
    ${{ if not(containsValue(parameters, 'runtimes')) }}:
      runtimes:
      - ${{ if ne(parameters.disableNoRuntime, 'true') }}:
        - condition:    ne(variables['SkipNoRuntime'], 'true')
          arguments:    '-p:NoNetFramework=true'
      - ${{ if ne(parameters.disableWindowsRuntime, 'true') }}:
        - id:           win
          condition:    ne(variables['SkipWindowsRuntime'], 'true')
          argValue:     win10-x64
          displayName:  Windows, 64-bit
          pool:
            vmImage:    windows-latest
          pack:
            skip:       true
      - ${{ if ne(parameters.disableLinuxRuntime, 'true') }}:
        - id:           linux
          condition:    ne(variables['SkipLinuxRuntime'], 'true')
          argValue:     linux-x64
          displayName:  Linux, 64-bit
          pool:
            vmImage:    ubuntu-latest
          pack:
            skip:       true
          arguments:    '-p:NoNetFramework=true'
      - ${{ if ne(parameters.disableMacOSRuntime, 'true') }}:
        - id:           osx
          condition:    ne(variables['SkipMacOSRuntime'], 'true')
          argValue:     osx-x64
          displayName:  macOS, 64-bit
          pool:
            vmImage:    macOS-latest
          pack:
            skip:       true
          arguments:    '-p:NoNetFramework=true'
      - ${{ each r in parameters.addRuntimes }}:
        - ${{ each pair in r }}:
            ${{ pair.key }}: ${{ pair.value }}
    ${{ each pair in parameters }}:
      ${{ if and(not(startsWith(pair.key, 'disable')), notIn(pair.key, 'overrideCommon')) }}:
        ${{ pair.key }}: ${{ pair.value }}
