name: $(Date:yyyy-MM-dd)-rev$(Rev:r)
trigger:
  batch: true
  paths:
    include:
    - src/THNETII.AzureDevOps.Pipelines.GitHubTaskLibrary/*
    - templates/githubaccesstoken/*
pr: none
steps:
- task: thnetii.thnetii-azuredevops-pipelines-githubtasklibrary.githubaccesstokentask.githubaccesstokentask@0
  displayName: 'Get GitHub Access Token'
  inputs:
    gitHubConnection: thnetii
- pwsh: |
    [System.Net.ServicePointManager]::SecurityProtocol = `
      [System.Net.ServicePointManager]::SecurityProtocol -bor `
      [System.Net.SecurityProtocolType]::Tls12

    [uri]$GitHubApiUser = "https://api.github.com/user"
    [securestring]$GitHubAccessToken = ConvertTo-SecureString $ENV:GitHubAccessToken -AsPlainText -Force

    try {
      $GitHubUserResponse = Invoke-RestMethod -Method Get -Uri $GitHubApiUser `
        -Authentication OAuth -Token $GitHubAccessToken `
        -ErrorVariable GitHubErrorResponse
      $GitHubUserJson = $GitHubUserResponse | ConvertTo-Json
    } catch {
      $GitHubUserJson = $GitHubErrorResponse[0].Message | ConvertFrom-Json | ConvertTo-Json
    }
    Write-Host $GitHubUserJson

    Write-Host

    [uri]$GitHubApiGrant = "https://api.github.com/authorizations"
    try {
      $GitHubGrantResponse = Invoke-RestMethod -Method Get -Uri $GitHubApiGrant `
        -Authentication OAuth -Token $GitHubAccessToken `
        -ErrorVariable GitHubErrorResponse
      $GitHubUserJson = $GitHubGrantResponse | ConvertTo-Json
    } catch {
      $GitHubUserJson = $GitHubErrorResponse[0].Message | ConvertFrom-Json | ConvertTo-Json
    }
    Write-Host $GitHubUserJson

  env:
    GitHubAccessToken: $(GitHub.AccessToken)
